{"version":3,"file":"js/app.572894a8.js","mappings":"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","sources":["webpack://cesium_smartcity/./src/cesiumModule/viewer.js","webpack://cesium_smartcity/./src/cesiumModule/createCity.js","webpack://cesium_smartcity/./src/cesiumModule/motifyMap.js","webpack://cesium_smartcity/./src/cesiumModule/createCone.js","webpack://cesium_smartcity/./src/cesiumModule/material/WallMaterial.js","webpack://cesium_smartcity/./src/cesiumModule/CreateWall.js","webpack://cesium_smartcity/./src/cesiumModule/material/apertureMaterial.js","webpack://cesium_smartcity/./src/cesiumModule/CreateAperture.js","webpack://cesium_smartcity/./src/cesiumModule/material/RadarMaterial.js","webpack://cesium_smartcity/./src/cesiumModule/CreateRadar.js","webpack://cesium_smartcity/./src/cesiumModule/material/ConmetMaterial.js","webpack://cesium_smartcity/./src/cesiumModule/CreateConmet.js","webpack://cesium_smartcity/./src/cesiumModule/material/TrakMaterial.js","webpack://cesium_smartcity/./src/cesiumModule/CreateTrak.js","webpack://cesium_smartcity/./src/App.vue","webpack://cesium_smartcity/./src/App.vue?7ccd","webpack://cesium_smartcity/./src/main.js","webpack://cesium_smartcity/webpack/bootstrap","webpack://cesium_smartcity/webpack/runtime/chunk loaded","webpack://cesium_smartcity/webpack/runtime/compat get default export","webpack://cesium_smartcity/webpack/runtime/define property getters","webpack://cesium_smartcity/webpack/runtime/global","webpack://cesium_smartcity/webpack/runtime/hasOwnProperty shorthand","webpack://cesium_smartcity/webpack/runtime/make namespace object","webpack://cesium_smartcity/webpack/runtime/jsonp chunk loading","webpack://cesium_smartcity/webpack/startup"],"sourcesContent":["import * as Cesium from 'cesium'\r\nimport '../Widgets/widgets.css'\r\nexport default function viewer() {\r\n    window.CESIUM_BASE_URL = '/'\r\n    // 设置默认视角 ==== 中国\r\n    Cesium.Camera.DEFAULT_VIEW_RECTANGLE = Cesium.Rectangle.fromDegrees(\r\n        // 西边经度\r\n        89.5,\r\n        // 南边纬度\r\n        20.4,\r\n        // 东边经度\r\n        110.4,\r\n        // 北边纬度\r\n        61.2\r\n    )\r\n    Cesium.Ion.defaultAccessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3NWY2YmE2ZS05ODBkLTQ4YmYtOTkwZi1hM2FmZjY5YTk5OWYiLCJpZCI6MTI5MzY0LCJpYXQiOjE2NzkyNDAzMTB9.OM4b5MGHBJ9unPAWW0L0jbVdXpRlxDrrZ58HKBkTUAU'\r\n    const viewer = new Cesium.Viewer('cityCanvas', {\r\n        animation: false,\r\n        homeButton: false,\r\n        timeline: false,\r\n        fullscreenButton: false,\r\n        navigationHelpButton: false,\r\n        geocoder: false,\r\n        baseLayerPicker: false,\r\n        sceneModePicker: false,\r\n        // // 加载国内地址地图，防止网络不好\r\n        // imageryProvider: new Cesium.WebMapTileServiceImageryProvider({\r\n        //     url: 'http://t0.tianditu.com/img_w/wmts?service=wmts&request=GetTile&version=1.0.0&LAYER=img&tileMatrixSet=w&TileMatrix={TileMatrix}&TileRow={TileRow}&TileCol={TileCol}&style=default&format=tiles&tk=da936c00daab02e12531811f266ac6dc',\r\n        //     layer: 'tdtBasicLayer',\r\n        //     style: 'defalut',\r\n        //     format: 'image/jpeg',\r\n        //     tileMatrixSetID: 'GoogleMapsCompatible'\r\n\r\n        // })\r\n    })\r\n    viewer._cesiumWidget._creditContainer.style.display = 'none'\r\n    viewer.scene.globe.enableLighting = false\r\n    viewer.shadows = false\r\n    viewer.scene.light = new Cesium.DirectionalLight({\r\n        direction: new Cesium.Cartesian3(100.0, 100.0, 100.0)\r\n    })\r\n    // 摄像机转去深圳京基100\r\n    // 将经纬度转成笛卡尔坐标\r\n    const position = new Cesium.Cartesian3.fromDegrees(114.05400, 22.52000, 700)\r\n    viewer.camera.flyTo({\r\n        destination: position,\r\n        orientation: {\r\n            // 方向\r\n            orientation: Cesium.Math.toRadians(-50),\r\n            // 倾斜\r\n            pitch: Cesium.Math.toRadians(-10),\r\n            // 翻滚\r\n            roll: 0\r\n        }\r\n    })\r\n\r\n    return viewer\r\n}","import * as Cesium from 'cesium'\r\nimport Nprogress from 'nprogress'\r\nexport default function createCityame(viewer) {\r\n  // 定义着色器\r\n  const customShader = `\r\n    varying vec3 v_positionEC;\r\n    void main() {\r\n      czm_materialInput materialInput;\r\n\r\n      vec4 v_position = czm_inverseModelView * vec4(v_positionEC, 1.0);\r\n                    \r\n      // 改变模型的颜色\r\n      // 根据高度来设置渐变颜色\r\n      float strength = 1.0 - (v_position.z / 400.0);\r\n\r\n      gl_FragColor = vec4(strength, strength * 0.2, strength, 1.0);\r\n                    \r\n      // 动态光环\r\n      // 获取帧数并保证在0-1之间\r\n      float time = fract(czm_frameNumber / (60.0 * 2.0));\r\n      // 往返\r\n      time = abs(time - 0.5) * 2.0;\r\n      // 返回clamp(x, min, max) 返回x在min和max的最小值\r\n      float diff = abs(clamp(v_position.z / 600.0, 0.0, 1.0) - time);\r\n      diff = step(0.01, diff);\r\n      gl_FragColor.rgb += vec3(0.5) * (1.0 - diff);\r\n    }\r\n  `\r\n  // 生成3d瓦片建筑\r\n  const cesium3DTileset = new Cesium.createOsmBuildings()\r\n  // const cesium3DTileset = new Cesium.Cesium3DTileset({\r\n  //   url: './json/tileset.json'\r\n  // })\r\n  viewer.scene.primitives.add(cesium3DTileset)\r\n  // cesium3DTileset.customShader = customShader\r\n  cesium3DTileset.style = new Cesium.Cesium3DTileStyle({\r\n    show: '${feature[\"name\"]} !== \"福田站\"'\r\n  })\r\n  //   // 瓦片加载时修改着色器\r\n  cesium3DTileset.tileVisible.addEventListener((tile) => {\r\n    // if(tile.name === '中国华润大厦') {\r\n    // tile.content.customShader = customShader\r\n    // }\r\n    const tileContent = tile.content\r\n    const tileContentLength = tileContent.featuresLength\r\n    // console.log(.customShader);\r\n    for (let i = 0; i < tileContentLength; i++) {\r\n\r\n      const feature = tileContent.getFeature(i)\r\n      // console.log(feature);\r\n      const model = feature.content._model\r\n      // 修改模型片元着色器_rendererResources.sourceShaders\r\n      model._rendererResources.sourceShaders[1] = customShader\r\n      model._shouldRegenerateShaders = true\r\n\r\n    }\r\n  })\r\n  cesium3DTileset.allTilesLoaded.addEventListener(() => {\r\n    Nprogress.done()\r\n  })\r\n}\r\n","export default function motifyMap(viewer) {\r\n    // 获取影像图层\r\n    const layer = viewer.imageryLayers.get(0)\r\n    // 设置两个变量，用来判断是否进行颜色翻转和过滤\r\n    layer.invertColor = true\r\n    layer.invertColor = [0, 50, 100]\r\n    // 获取地表片元着色器\r\n    const fragmentShader = viewer.scene.globe._surfaceShaderSet.baseFragmentShaderSource.sources\r\n    fragmentShader.forEach((shader, index) => {\r\n        // 一份留存\r\n        const strS = 'color = czm_saturation(color, textureSaturation);\\n#endif\\n'\r\n        // 一份修改\r\n        let strT = 'color = czm_saturation(color, textureSaturation);\\n#endif\\n'\r\n        // 颜色翻转\r\n        if (layer.invertColor) {\r\n        strT += `\r\n        color.r = 1.0 - color.r;\r\n        color.g = 1.0 - color.g;\r\n        color.b = 1.0 - color.b;\r\n        `\r\n        }\r\n        // 根据过滤掉的程度来调色\r\n        if (layer.invertColor) {\r\n        strT += `\r\n        color.r = color.r * ${layer.invertColor[0]}.0 / 255.0;\r\n        color.g = color.g * ${layer.invertColor[1]}.0 / 255.0;\r\n        color.b = color.b * ${layer.invertColor[2]}.0 / 255.0;\r\n        `\r\n        }\r\n        // 替换掉每一个片元着色器包含strS的这段代码\r\n        fragmentShader[index] = shader.replace(strS, strT)\r\n    })\r\n\r\n\r\n}","import * as Cesium from 'cesium'\r\nimport gsap from 'gsap'\r\nexport default function createCone(viewer) {\r\n    let params = {\r\n        height: 800,\r\n        deg: 0\r\n    }\r\n    // 设置位置\r\n    const gltfMatrix = Cesium.Transforms.headingPitchRollToFixedFrame(\r\n        // 位置\r\n        Cesium.Cartesian3.fromDegrees( 114.05036, 22.53664, params.height),\r\n        new Cesium.HeadingPitchRoll(params.deg, 0, 0)\r\n    )\r\n    const gltf =  viewer.scene.primitives.add(new Cesium.Model.fromGltf({\r\n        url: './glb/pyramid.glb',\r\n        show: true,\r\n        scale: 150,\r\n        color: Cesium.Color.PURPLE.withAlpha(0.5),\r\n        colorBlendMode: Cesium.ColorBlendMode.MIX,\r\n        modelMatrix: gltfMatrix\r\n    }))\r\n    gsap.to(params, {\r\n        height: 900,\r\n        deg: Math.PI,\r\n        duration: 1,\r\n        repeat: -1,\r\n        yoyo: true,\r\n        onUpdate: () => {\r\n            gltf.modelMatrix = Cesium.Transforms.headingPitchRollToFixedFrame(\r\n                // 位置\r\n                Cesium.Cartesian3.fromDegrees( 114.05036, 22.53664, params.height),\r\n                new Cesium.HeadingPitchRoll(params.deg, 0, 0)\r\n            )\r\n        }\r\n    })\r\n}","import * as Cesium from 'cesium'\r\nimport gsap from 'gsap'\r\nexport default class WallMaterialPrototype {\r\n  constructor(name) {\r\n    this.name = name\r\n    this.definitionChanged = new Cesium.Event();\r\n    this.params = {\r\n      uTime: 0\r\n    }\r\n    Cesium.Material._materialCache.addMaterial('WallMaterial', {\r\n      fabric: {\r\n        type: 'WallMaterial',\r\n        uniforms: {\r\n          uTime: 0,\r\n          image: './texture/wall.png'\r\n        },\r\n        source: `\r\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\r\n            // 生成默认基础材质\r\n            czm_material material = czm_getDefaultMaterial(materialInput);\r\n            vec2 st = materialInput.st;\r\n            // 根据UV采样颜色\r\n            vec4 color =  texture2D(image, vec2(fract(st.y + uTime), st.x));\r\n            material.diffuse = vec3(color.r + 0.6, color.g, color.b + uTime);\r\n            material.alpha = color.a;\r\n            return material;\r\n          }\r\n        `\r\n      }\r\n    })\r\n    \r\n    gsap.to(this.params, {\r\n      uTime: 1, \r\n      duration: 1, \r\n      repeat: -1,\r\n      ease: 'linear'\r\n    })\r\n  }\r\n  getType() {\r\n    // 返回材质类型\r\n    return \"WallMaterial\";\r\n  }\r\n  getValue(time, result) {\r\n    result.uTime = this.params.uTime;\r\n    // 返回材质值\r\n    return result;\r\n  }\r\n  equals(other) {\r\n    // 判断两个材质是否相等\r\n    return (\r\n      other instanceof WallMaterialPrototype && this.name === other.name\r\n    );\r\n  }\r\n}","import * as Cesium from 'cesium'\r\nimport WallMaterialPrototype from './material/WallMaterial.js'\r\nexport default class CreateWall {\r\n    constructor(viewer) {\r\n        this.WallMaterial = new WallMaterialPrototype('WallMaterial')\r\n        this.wall = viewer.entities.add({\r\n            name: 'lineWall',\r\n            wall: {\r\n                positions: Cesium.Cartesian3.fromDegreesArrayHeights([\r\n                    114.06282,22.56365,100.0,\r\n                    114.06793,22.56365,100.0,\r\n                    114.06793,22.55851,100.0,\r\n                    114.06282,22.55851,100.0,\r\n                    114.06282,22.56365,100.0,\r\n                ]),\r\n                material: this.WallMaterial\r\n            },\r\n             \r\n        })\r\n    }\r\n}","import * as Cesium from 'cesium'\r\n// import gsap from 'gsap'\r\nexport default class apertureMaterialPrototype {\r\n  constructor(name) {\r\n    this.name = name\r\n    this.definitionChanged = new Cesium.Event();\r\n    // this.params = {\r\n    //   uTime: 0\r\n    // }\r\n    Cesium.Material._materialCache.addMaterial('apertureMaterial', {\r\n      fabric: {\r\n        type: 'apertureMaterial',\r\n        uniforms: {\r\n          uTime: 0,\r\n          image: './texture/hexagon.png'\r\n        },\r\n        source: `\r\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\r\n            // 生成默认基础材质\r\n            czm_material material = czm_getDefaultMaterial(materialInput);\r\n            vec2 st = materialInput.st;\r\n            // 根据UV采样颜色\r\n            vec4 color =  texture2D(image, st);\r\n            material.diffuse = vec3(color.r + 0.6, color.g, color.b);\r\n            material.alpha = color.a;\r\n            return material;\r\n          }\r\n        `\r\n      }\r\n    })\r\n    \r\n    // gsap.to(this.params, {\r\n    //   uTime: 1, \r\n    //   duration: 1, \r\n    //   repeat: -1,\r\n    //   ease: 'linear'\r\n    // })\r\n  }\r\n  getType() {\r\n    // 返回材质类型\r\n    return \"apertureMaterial\";\r\n  }\r\n  getValue(time, result) {\r\n    // result.uTime = this.params.uTime;\r\n    // 返回材质值\r\n    return result;\r\n  }\r\n  equals(other) {\r\n    // 判断两个材质是否相等\r\n    return (\r\n      other instanceof apertureMaterialPrototype && this.name === other.name\r\n    );\r\n  }\r\n}","import * as Cesium from 'cesium'\r\nimport apertureMaterialPrototype from './material/apertureMaterial.js'\r\nimport gsap from 'gsap'\r\nexport default class CreateAperture {\r\n    constructor(viewer) {\r\n        this.parmas = {\r\n            minLot: 114.05482,\r\n            minLat: 22.53746,\r\n            maxLot: 114.05382,\r\n            maxLat: 22.53746\r\n        }\r\n        this.apertureMaterial = new apertureMaterialPrototype('apertureMaterial')\r\n        this.lightRectangle = viewer.entities.add({\r\n            name: 'Aperture',\r\n            rectangle: {\r\n                coordinates: Cesium.Rectangle.fromDegrees(\r\n                    114.05782, 22.53746,\r\n                    114.05782, 22.53746\r\n                ),\r\n                material: this.apertureMaterial\r\n            }\r\n        })\r\n        gsap.to(this.parmas, {\r\n            minLot: 114.03482,\r\n            minLat: 22.51746,\r\n            maxLot: 114.07382,\r\n            maxLat: 22.55746,\r\n            duration: 4,\r\n            repeat: -1,\r\n            ease: 'linear',\r\n            onUpdate: () => {\r\n                this.lightRectangle.rectangle.coordinates = Cesium.Rectangle.fromDegrees(\r\n                    this.parmas.minLot,\r\n                    this.parmas.minLat,\r\n                    this.parmas.maxLot,\r\n                    this.parmas.maxLat,\r\n                )\r\n            }\r\n        })\r\n    }\r\n}","import * as Cesium from 'cesium'\r\nimport gsap from 'gsap'\r\nexport default class RadarMaterialPrototype {\r\n  constructor(name) {\r\n    this.name = name\r\n    this.definitionChanged = new Cesium.Event();\r\n    this.params = {\r\n      uTime: 0\r\n    }\r\n    Cesium.Material._materialCache.addMaterial('RadarMaterial', {\r\n      fabric: {\r\n        type: 'RadarMaterial',\r\n        uniforms: {\r\n          uTime: 0\r\n        },\r\n        source: `\r\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\r\n            // 生成默认基础材质\r\n            czm_material material = czm_getDefaultMaterial(materialInput);\r\n            // 旋转UV\r\n            vec2 newSt = mat2(cos(uTime), -sin(uTime), sin(uTime), cos(uTime)) * (materialInput.st - 0.5);\r\n            newSt =  newSt + 0.5;\r\n            // 获取st\r\n            vec2 st = newSt;\r\n\r\n            // 设置圆，外部透明， 内部不透明\r\n            float alpha = 1.0 - step(0.5, distance(st, vec2(0.5)));\r\n\r\n            // 按照角度来设置强弱\r\n            float angle = atan(st.x - 0.5, st.y - 0.5);\r\n\r\n            // angle是从-pi到pi的, 如果要设置从0-1的转变, 要加上pi\r\n            float strength = (angle + 3.1416) / 6.2832;\r\n\r\n            // 将强弱与透明度结合\r\n            alpha = alpha * strength;\r\n\r\n            material.diffuse = vec3(st.x, st.y, 1.0);\r\n            material.alpha = alpha;\r\n            return material;\r\n          }\r\n        `\r\n      }\r\n    })\r\n    \r\n    gsap.to(this.params, {\r\n      uTime: 6.29, \r\n      duration: 1, \r\n      repeat: -1,\r\n      ease: 'linear'\r\n    })\r\n  }\r\n  getType() {\r\n    // 返回材质类型\r\n    return \"RadarMaterial\";\r\n  }\r\n  getValue(time, result) {\r\n    result.uTime = this.params.uTime;\r\n    // 返回材质值\r\n    return result;\r\n  }\r\n  equals(other) {\r\n    // 判断两个材质是否相等\r\n    return (\r\n      other instanceof RadarMaterialPrototype && this.name === other.name\r\n    );\r\n  }\r\n}","import * as Cesium from 'cesium'\r\nimport RadarMaterialPrototype from './material/RadarMaterial.js'\r\nexport default class CreateRadar {\r\n    constructor(viewer) {\r\n        this.RadarMaterial = new RadarMaterialPrototype('RadarMaterial')\r\n        this.wall = viewer.entities.add({\r\n            name: 'Radar',\r\n            rectangle: {\r\n                coordinates: Cesium.Rectangle.fromDegrees(\r\n                    114.06133, \t22.52005,\r\n                    114.06633, \t22.52605,\r\n                ),\r\n                material: this.RadarMaterial\r\n            }\r\n        })\r\n    }\r\n}","import * as Cesium from 'cesium'\r\n// import gsap from 'gsap'\r\nlet typeNum = 0\r\nexport default class ConmetMaterialProperty {\r\n  constructor(name, color = new Cesium.Color(0.7, 0.6, 1.0, 1.0)) {\r\n    this.name = name\r\n    typeNum++\r\n    this.num = typeNum\r\n    this.definitionChanged = new Cesium.Event();\r\n    Cesium.Material._materialCache.addMaterial('ConmetMaterial' + this.num, {\r\n      fabric: {\r\n        type: 'ConmetMaterial' + typeNum,\r\n        uniforms: {\r\n          color\r\n        },\r\n        source: `\r\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\r\n            // 生成默认基础材质\r\n            czm_material material = czm_getDefaultMaterial(materialInput);\r\n            // 获取st\r\n            vec2 st = materialInput.st;\r\n            \r\n            // 获取当前帧数\r\n            float time = fract(czm_frameNumber / (60.0 * 10.0));\r\n            time = time * (1.0 + 0.1);\r\n\r\n            float alpha = smoothstep(time - 0.1, time, st.s) * step(-time, -st.s);\r\n            alpha += 0.05;\r\n\r\n\r\n            material.diffuse = color.rgb;\r\n            material.alpha = alpha;\r\n            return material;\r\n          }\r\n        `\r\n      }\r\n    })\r\n    \r\n  }\r\n  getType() {\r\n    // 返回材质类型\r\n    return \"ConmetMaterial\" + this.num;\r\n  }\r\n  getValue(time, result) {\r\n    // 返回材质值\r\n    return result;\r\n  }\r\n  equals(other) {\r\n    // 判断两个材质是否相等\r\n    return (\r\n      other instanceof ConmetMaterialProperty && this.name === other.name\r\n    );\r\n  }\r\n}","import * as turf from '@turf/turf'\r\nimport * as Cesium from 'cesium'\r\nimport ConmetMaterialProperty from './material/ConmetMaterial.js'\r\nexport default class CreateConmet {\r\n    constructor(viewer) {\r\n        this.bbox = [114.03982, 22.52746,\r\n            114.07482, 22.55746]\r\n        // 根据矩形区域创建点创建点\r\n        this.points = turf.randomPoint(300, {bbox: this.bbox})\r\n\r\n        // 根据生成的点生成线\r\n        let feature = this.points.features;\r\n        feature.forEach(feature => {\r\n            // 获取每一个点的经纬度\r\n            const point = feature.geometry.coordinates\r\n            // 根据点设置起始位置\r\n            const start = Cesium.Cartesian3.fromDegrees(point[0], point[1], 0);\r\n\r\n            // 根据点设置结束位置\r\n            const end = Cesium.Cartesian3.fromDegrees(point[0], point[1], 200 + Math.random() * 2000)\r\n\r\n            // 创建自定义材质\r\n            this.ConmetMaterial = new ConmetMaterialProperty('ConmetMaterial')\r\n\r\n            // 创建线\r\n            this.flyLine = viewer.entities.add({\r\n                polyline: {\r\n                    positions: [start, end],\r\n                    width: 2,\r\n                    material: this.ConmetMaterial\r\n                }\r\n            })\r\n\r\n        });\r\n    }\r\n}","import * as Cesium from 'cesium'\r\nimport gsap from 'gsap'\r\nexport default class TrakMaterialPrototype {\r\n  constructor(name) {\r\n    this.name = name\r\n    this.definitionChanged = new Cesium.Event();\r\n    this.params = {\r\n      uTime: 0\r\n    }\r\n    Cesium.Material._materialCache.addMaterial('TrakMaterial', {\r\n      fabric: {\r\n        type: 'TrakMaterial',\r\n        uniforms: {\r\n          uTime: 0,\r\n          image: './texture/trak.png'\r\n        },\r\n        source: `\r\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\r\n            // 生成默认基础材质\r\n            czm_material material = czm_getDefaultMaterial(materialInput);\r\n            vec2 st = materialInput.st;\r\n            // 根据UV采样颜色\r\n            vec4 color =  texture2D(image, vec2(fract(st.s - uTime), st.t));\r\n            material.diffuse = vec3(color.r + 0.6, color.g, color.b + uTime);\r\n            material.alpha = color.a;\r\n            return material;\r\n          }\r\n        `\r\n      }\r\n    })\r\n    \r\n    gsap.to(this.params, {\r\n      uTime: 1, \r\n      duration: 1, \r\n      repeat: -1,\r\n      ease: 'linear'\r\n    })\r\n  }\r\n  getType() {\r\n    // 返回材质类型\r\n    return \"TrakMaterial\";\r\n  }\r\n  getValue(time, result) {\r\n    result.uTime = this.params.uTime;\r\n    // 返回材质值\r\n    return result;\r\n  }\r\n  equals(other) {\r\n    // 判断两个材质是否相等\r\n    return (\r\n      other instanceof TrakMaterialPrototype && this.name === other.name\r\n    );\r\n  }\r\n}","import * as Cesium from 'cesium'\r\nimport TrakMaterialPrototype from './material/TrakMaterial.js'\r\nexport default class CreateTrak {\r\n    constructor(viewer) {\r\n       \r\n        // 加载geojson文件\r\n        const geoJson = Cesium.GeoJsonDataSource.load('./json/trak.geojson')\r\n        geoJson.then(data => {\r\n            viewer.dataSources.add(data)\r\n            let entities = data.entities.values\r\n            const TrakMaterial = new TrakMaterialPrototype('TrakMaterial')\r\n            entities.forEach(item => {\r\n                let polyline = item.polyline\r\n                polyline.material = TrakMaterial\r\n            })\r\n        })\r\n    }\r\n}","<template>\n  <div id=\"cityCanvas\"></div>\n</template>\n\n<script setup>\nimport viewer from '@/cesiumModule/viewer'\nimport createCity from '@/cesiumModule/createCity'\nimport motifyMap from '@/cesiumModule/motifyMap'\nimport { onMounted } from 'vue'\nimport createCone from './cesiumModule/createCone'\nimport CreateWall from './cesiumModule/CreateWall'\nimport CreateAperture from './cesiumModule/CreateAperture'\nimport CreateRadar from './cesiumModule/CreateRadar'\nimport CreateConmet from './cesiumModule/CreateConmet'\nimport CreateTrak from './cesiumModule/CreateTrak'\nimport Nprogress from 'nprogress'\nimport {onBeforeMount} from 'vue'\n\nonBeforeMount(() => {\n  Nprogress.start()\n})\n\nonMounted(() => {\n  const viewers = viewer()\n  // 创建城市并修改颜色\n  createCity(viewers)\n  // 修改地图颜色\n  motifyMap(viewers)\n  // 创建光锥\n  createCone(viewers)\n  // 创建光墙\n  new CreateWall(viewers)\n  // 创建光圈\n  new CreateAperture(viewers)\n  // 创建雷达\n  new CreateRadar(viewers)\n  // 创建彗星\n  new CreateConmet(viewers)\n  // 创建轨迹路径\n  new CreateTrak(viewers)\n})\n</script>\n\n<style lang=\"scss\">\n*{\n  margin: 0;\n  padding: 0;\n}\n#cityCanvas{\n  width: 100vw;\n  height: 100vh;\n}\n#nprogress{\n  z-index: 666;\n}\n#nprogress .bar {\nbackground: rgb(240, 244, 242) !important;\nheight: 0.5rem;\n}\n#nprogress .peg {\n  box-shadow: 0 0 10px rgb(203, 11, 113), 0 0 5px rgb(203, 11, 113) !important;\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b0362ca6&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport 'nprogress/nprogress.css'\nimport NProgress from 'nprogress'\nNProgress.configure({     \n    easing: 'ease',  // 动画方式    \n    speed: 500,  // 递增进度条的速度    \n    showSpinner: false, // 是否显示加载ico    \n    trickleSpeed: 200, // 自动递增间隔    \n    minimum: 0.6, // 初始化时的最小百分比\n}) \ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcesium_smartcity\"] = self[\"webpackChunkcesium_smartcity\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(3168); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["viewer","window","CESIUM_BASE_URL","Cesium","animation","homeButton","timeline","fullscreenButton","navigationHelpButton","geocoder","baseLayerPicker","sceneModePicker","_cesiumWidget","_creditContainer","style","display","scene","globe","enableLighting","shadows","light","direction","position","camera","flyTo","destination","orientation","pitch","roll","createCityame","customShader","cesium3DTileset","primitives","add","show","tileVisible","addEventListener","tile","tileContent","content","tileContentLength","featuresLength","i","feature","getFeature","model","_model","_rendererResources","sourceShaders","_shouldRegenerateShaders","allTilesLoaded","motifyMap","layer","imageryLayers","get","invertColor","fragmentShader","_surfaceShaderSet","baseFragmentShaderSource","sources","forEach","shader","index","strS","strT","replace","createCone","params","height","deg","gltfMatrix","gltf","url","scale","color","colorBlendMode","modelMatrix","gsap","Math","PI","duration","repeat","yoyo","onUpdate","WallMaterialPrototype","constructor","name","this","definitionChanged","uTime","fabric","type","uniforms","image","source","ease","getType","getValue","time","result","equals","other","CreateWall","WallMaterial","wall","entities","positions","material","apertureMaterialPrototype","CreateAperture","parmas","minLot","minLat","maxLot","maxLat","apertureMaterial","lightRectangle","rectangle","coordinates","RadarMaterialPrototype","CreateRadar","RadarMaterial","typeNum","ConmetMaterialProperty","num","CreateConmet","bbox","points","features","point","geometry","start","end","random","ConmetMaterial","flyLine","polyline","width","TrakMaterialPrototype","CreateTrak","geoJson","then","data","dataSources","values","TrakMaterial","item","viewers","__exports__","easing","speed","showSpinner","trickleSpeed","minimum","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}