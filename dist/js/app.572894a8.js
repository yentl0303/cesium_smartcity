(function(){"use strict";var e={3168:function(e,t,a){var n=a(9963),r=a(6252),i=a(3388);function o(){window.CESIUM_BASE_URL="/",i.V1s.DEFAULT_VIEW_RECTANGLE=i.AeJ.fromDegrees(89.5,20.4,110.4,61.2),i.f3v.defaultAccessToken="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI3NWY2YmE2ZS05ODBkLTQ4YmYtOTkwZi1hM2FmZjY5YTk5OWYiLCJpZCI6MTI5MzY0LCJpYXQiOjE2NzkyNDAzMTB9.OM4b5MGHBJ9unPAWW0L0jbVdXpRlxDrrZ58HKBkTUAU";const e=new i.AEx("cityCanvas",{animation:!1,homeButton:!1,timeline:!1,fullscreenButton:!1,navigationHelpButton:!1,geocoder:!1,baseLayerPicker:!1,sceneModePicker:!1});e._cesiumWidget._creditContainer.style.display="none",e.scene.globe.enableLighting=!1,e.shadows=!1,e.scene.light=new i.Ox3({direction:new i.b91(100,100,100)});const t=new i.b91.fromDegrees(114.054,22.52,700);return e.camera.flyTo({destination:t,orientation:{orientation:i.ZX$.toRadians(-50),pitch:i.ZX$.toRadians(-10),roll:0}}),e}var l=a(4865),s=a.n(l);function c(e){const t="\n    varying vec3 v_positionEC;\n    void main() {\n      czm_materialInput materialInput;\n\n      vec4 v_position = czm_inverseModelView * vec4(v_positionEC, 1.0);\n                    \n      // 改变模型的颜色\n      // 根据高度来设置渐变颜色\n      float strength = 1.0 - (v_position.z / 400.0);\n\n      gl_FragColor = vec4(strength, strength * 0.2, strength, 1.0);\n                    \n      // 动态光环\n      // 获取帧数并保证在0-1之间\n      float time = fract(czm_frameNumber / (60.0 * 2.0));\n      // 往返\n      time = abs(time - 0.5) * 2.0;\n      // 返回clamp(x, min, max) 返回x在min和max的最小值\n      float diff = abs(clamp(v_position.z / 600.0, 0.0, 1.0) - time);\n      diff = step(0.01, diff);\n      gl_FragColor.rgb += vec3(0.5) * (1.0 - diff);\n    }\n  ",a=new i.dZk;e.scene.primitives.add(a),a.style=new i.joN({show:'${feature["name"]} !== "福田站"'}),a.tileVisible.addEventListener((e=>{const a=e.content,n=a.featuresLength;for(let r=0;r<n;r++){const e=a.getFeature(r),n=e.content._model;n._rendererResources.sourceShaders[1]=t,n._shouldRegenerateShaders=!0}})),a.allTilesLoaded.addEventListener((()=>{s().done()}))}function m(e){const t=e.imageryLayers.get(0);t.invertColor=!0,t.invertColor=[0,50,100];const a=e.scene.globe._surfaceShaderSet.baseFragmentShaderSource.sources;a.forEach(((e,n)=>{const r="color = czm_saturation(color, textureSaturation);\n#endif\n";let i="color = czm_saturation(color, textureSaturation);\n#endif\n";t.invertColor&&(i+="\n        color.r = 1.0 - color.r;\n        color.g = 1.0 - color.g;\n        color.b = 1.0 - color.b;\n        "),t.invertColor&&(i+=`\n        color.r = color.r * ${t.invertColor[0]}.0 / 255.0;\n        color.g = color.g * ${t.invertColor[1]}.0 / 255.0;\n        color.b = color.b * ${t.invertColor[2]}.0 / 255.0;\n        `),a[n]=e.replace(r,i)}))}var u=a(6038);function p(e){let t={height:800,deg:0};const a=i.YRB.headingPitchRollToFixedFrame(i.b91.fromDegrees(114.05036,22.53664,t.height),new i.xix(t.deg,0,0)),n=e.scene.primitives.add(new i.Hnr.fromGltf({url:"./glb/pyramid.glb",show:!0,scale:150,color:i.Ilk.PURPLE.withAlpha(.5),colorBlendMode:i.xp3.MIX,modelMatrix:a}));u.ZP.to(t,{height:900,deg:Math.PI,duration:1,repeat:-1,yoyo:!0,onUpdate:()=>{n.modelMatrix=i.YRB.headingPitchRollToFixedFrame(i.b91.fromDegrees(114.05036,22.53664,t.height),new i.xix(t.deg,0,0))}})}class d{constructor(e){this.name=e,this.definitionChanged=new i.juk,this.params={uTime:0},i.F5T._materialCache.addMaterial("WallMaterial",{fabric:{type:"WallMaterial",uniforms:{uTime:0,image:"./texture/wall.png"},source:"\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\n            // 生成默认基础材质\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            vec2 st = materialInput.st;\n            // 根据UV采样颜色\n            vec4 color =  texture2D(image, vec2(fract(st.y + uTime), st.x));\n            material.diffuse = vec3(color.r + 0.6, color.g, color.b + uTime);\n            material.alpha = color.a;\n            return material;\n          }\n        "}}),u.ZP.to(this.params,{uTime:1,duration:1,repeat:-1,ease:"linear"})}getType(){return"WallMaterial"}getValue(e,t){return t.uTime=this.params.uTime,t}equals(e){return e instanceof d&&this.name===e.name}}class f{constructor(e){this.WallMaterial=new d("WallMaterial"),this.wall=e.entities.add({name:"lineWall",wall:{positions:i.b91.fromDegreesArrayHeights([114.06282,22.56365,100,114.06793,22.56365,100,114.06793,22.55851,100,114.06282,22.55851,100,114.06282,22.56365,100]),material:this.WallMaterial}})}}class h{constructor(e){this.name=e,this.definitionChanged=new i.juk,i.F5T._materialCache.addMaterial("apertureMaterial",{fabric:{type:"apertureMaterial",uniforms:{uTime:0,image:"./texture/hexagon.png"},source:"\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\n            // 生成默认基础材质\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            vec2 st = materialInput.st;\n            // 根据UV采样颜色\n            vec4 color =  texture2D(image, st);\n            material.diffuse = vec3(color.r + 0.6, color.g, color.b);\n            material.alpha = color.a;\n            return material;\n          }\n        "}})}getType(){return"apertureMaterial"}getValue(e,t){return t}equals(e){return e instanceof h&&this.name===e.name}}class g{constructor(e){this.parmas={minLot:114.05482,minLat:22.53746,maxLot:114.05382,maxLat:22.53746},this.apertureMaterial=new h("apertureMaterial"),this.lightRectangle=e.entities.add({name:"Aperture",rectangle:{coordinates:i.AeJ.fromDegrees(114.05782,22.53746,114.05782,22.53746),material:this.apertureMaterial}}),u.ZP.to(this.parmas,{minLot:114.03482,minLat:22.51746,maxLot:114.07382,maxLat:22.55746,duration:4,repeat:-1,ease:"linear",onUpdate:()=>{this.lightRectangle.rectangle.coordinates=i.AeJ.fromDegrees(this.parmas.minLot,this.parmas.minLat,this.parmas.maxLot,this.parmas.maxLat)}})}}class v{constructor(e){this.name=e,this.definitionChanged=new i.juk,this.params={uTime:0},i.F5T._materialCache.addMaterial("RadarMaterial",{fabric:{type:"RadarMaterial",uniforms:{uTime:0},source:"\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\n            // 生成默认基础材质\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            // 旋转UV\n            vec2 newSt = mat2(cos(uTime), -sin(uTime), sin(uTime), cos(uTime)) * (materialInput.st - 0.5);\n            newSt =  newSt + 0.5;\n            // 获取st\n            vec2 st = newSt;\n\n            // 设置圆，外部透明， 内部不透明\n            float alpha = 1.0 - step(0.5, distance(st, vec2(0.5)));\n\n            // 按照角度来设置强弱\n            float angle = atan(st.x - 0.5, st.y - 0.5);\n\n            // angle是从-pi到pi的, 如果要设置从0-1的转变, 要加上pi\n            float strength = (angle + 3.1416) / 6.2832;\n\n            // 将强弱与透明度结合\n            alpha = alpha * strength;\n\n            material.diffuse = vec3(st.x, st.y, 1.0);\n            material.alpha = alpha;\n            return material;\n          }\n        "}}),u.ZP.to(this.params,{uTime:6.29,duration:1,repeat:-1,ease:"linear"})}getType(){return"RadarMaterial"}getValue(e,t){return t.uTime=this.params.uTime,t}equals(e){return e instanceof v&&this.name===e.name}}class b{constructor(e){this.RadarMaterial=new v("RadarMaterial"),this.wall=e.entities.add({name:"Radar",rectangle:{coordinates:i.AeJ.fromDegrees(114.06133,22.52005,114.06633,22.52605),material:this.RadarMaterial}})}}var M=a(1335);let _=0;class T{constructor(e,t=new i.Ilk(.7,.6,1,1)){this.name=e,_++,this.num=_,this.definitionChanged=new i.juk,i.F5T._materialCache.addMaterial("ConmetMaterial"+this.num,{fabric:{type:"ConmetMaterial"+_,uniforms:{color:t},source:"\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\n            // 生成默认基础材质\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            // 获取st\n            vec2 st = materialInput.st;\n            \n            // 获取当前帧数\n            float time = fract(czm_frameNumber / (60.0 * 10.0));\n            time = time * (1.0 + 0.1);\n\n            float alpha = smoothstep(time - 0.1, time, st.s) * step(-time, -st.s);\n            alpha += 0.05;\n\n\n            material.diffuse = color.rgb;\n            material.alpha = alpha;\n            return material;\n          }\n        "}})}getType(){return"ConmetMaterial"+this.num}getValue(e,t){return t}equals(e){return e instanceof T&&this.name===e.name}}class w{constructor(e){this.bbox=[114.03982,22.52746,114.07482,22.55746],this.points=M.dtN(300,{bbox:this.bbox});let t=this.points.features;t.forEach((t=>{const a=t.geometry.coordinates,n=i.b91.fromDegrees(a[0],a[1],0),r=i.b91.fromDegrees(a[0],a[1],200+2e3*Math.random());this.ConmetMaterial=new T("ConmetMaterial"),this.flyLine=e.entities.add({polyline:{positions:[n,r],width:2,material:this.ConmetMaterial}})}))}}class y{constructor(e){this.name=e,this.definitionChanged=new i.juk,this.params={uTime:0},i.F5T._materialCache.addMaterial("TrakMaterial",{fabric:{type:"TrakMaterial",uniforms:{uTime:0,image:"./texture/trak.png"},source:"\n          czm_material czm_getMaterial(czm_materialInput materialInput) {\n            // 生成默认基础材质\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            vec2 st = materialInput.st;\n            // 根据UV采样颜色\n            vec4 color =  texture2D(image, vec2(fract(st.s - uTime), st.t));\n            material.diffuse = vec3(color.r + 0.6, color.g, color.b + uTime);\n            material.alpha = color.a;\n            return material;\n          }\n        "}}),u.ZP.to(this.params,{uTime:1,duration:1,repeat:-1,ease:"linear"})}getType(){return"TrakMaterial"}getValue(e,t){return t.uTime=this.params.uTime,t}equals(e){return e instanceof y&&this.name===e.name}}class x{constructor(e){const t=i.I4C.load("./json/trak.geojson");t.then((t=>{e.dataSources.add(t);let a=t.entities.values;const n=new y("TrakMaterial");a.forEach((e=>{let t=e.polyline;t.material=n}))}))}}const C={id:"cityCanvas"};var I={__name:"App",setup(e){return(0,r.wF)((()=>{s().start()})),(0,r.bv)((()=>{const e=o();c(e),m(e),p(e),new f(e),new g(e),new b(e),new w(e),new x(e)})),(e,t)=>((0,r.wg)(),(0,r.iD)("div",C))}};const z=I;var k=z;s().configure({easing:"ease",speed:500,showSpinner:!1,trickleSpeed:200,minimum:.6}),(0,n.ri)(k).mount("#app")}},t={};function a(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,a),i.exports}a.m=e,function(){var e=[];a.O=function(t,n,r,i){if(!n){var o=1/0;for(m=0;m<e.length;m++){n=e[m][0],r=e[m][1],i=e[m][2];for(var l=!0,s=0;s<n.length;s++)(!1&i||o>=i)&&Object.keys(a.O).every((function(e){return a.O[e](n[s])}))?n.splice(s--,1):(l=!1,i<o&&(o=i));if(l){e.splice(m--,1);var c=r();void 0!==c&&(t=c)}}return t}i=i||0;for(var m=e.length;m>0&&e[m-1][2]>i;m--)e[m]=e[m-1];e[m]=[n,r,i]}}(),function(){a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,{a:t}),t}}(),function(){a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})}}(),function(){a.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}()}(),function(){a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}}(),function(){a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}}(),function(){var e={143:0};a.O.j=function(t){return 0===e[t]};var t=function(t,n){var r,i,o=n[0],l=n[1],s=n[2],c=0;if(o.some((function(t){return 0!==e[t]}))){for(r in l)a.o(l,r)&&(a.m[r]=l[r]);if(s)var m=s(a)}for(t&&t(n);c<o.length;c++)i=o[c],a.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return a.O(m)},n=self["webpackChunkcesium_smartcity"]=self["webpackChunkcesium_smartcity"]||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var n=a.O(void 0,[998],(function(){return a(3168)}));n=a.O(n)})();
//# sourceMappingURL=app.572894a8.js.map